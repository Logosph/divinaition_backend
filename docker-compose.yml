services:

  # Databases

  divinaition_auth_pg:
    image: postgres:latest
    container_name: divinaition_auth_pg
    environment:
      POSTGRES_USER: $AUTH_POSTGRES_USER
      POSTGRES_PASSWORD: $AUTH_POSTGRES_PASSWORD
      POSTGRES_DB: $AUTH_POSTGRES_NAME
    env_file:
      - .env
    ports:
      - "35432:5432"
    volumes:
      - divinaition_auth_pg:/var/lib/data
    command: [ "postgres", "-c", "log_statement=all" ]
    restart: on-failure
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ", $AUTH_POSTGRES_USER, " -d ", $AUTH_POSTGRES_NAME ]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 2G

  divinaition_user_pg:
    image: postgres:latest
    container_name: divinaition_user_pg
    environment:
      POSTGRES_USER: $USER_POSTGRES_USER
      POSTGRES_PASSWORD: $USER_POSTGRES_PASSWORD
      POSTGRES_DB: $USER_POSTGRES_NAME
    env_file:
      - .env
    ports:
      - "45432:5432"
    volumes:
      - divinaition_user_pg:/var/lib/data
    command: [ "postgres", "-c", "log_statement=all" ]
    restart: on-failure
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ", $USER_POSTGRES_USER, " -d ", $USER_POSTGRES_NAME ]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 2G


  # Services
  divinaition_auth_service:
    build:
      context: auth_service
      dockerfile: Dockerfile
    command: sh -c 'sh scripts/startapp.sh'
    container_name: divinaition_auth_service
    ports:
      - "8010:8000"
    volumes:
      - ./auth_service:/app
    env_file:
      - ./auth_service/.env
    healthcheck:
      test: [ "CMD", "curl", "localhost:8010/docs" ]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 1600M
    restart: on-failure

  divinaition_user_service:
    build:
      context: user_service
      dockerfile: Dockerfile
    command: sh -c 'sh scripts/startapp.sh'
    container_name: divinaition_user_service
    ports:
      - "8011:8000"
    volumes:
      - ./user_service:/app
    env_file:
      - ./user_service/.env
    healthcheck:
      test: [ "CMD", "curl", "localhost:8011/docs" ]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 1600M
    restart: on-failure

  divinaition_llm_service:
    build:
      context: llm_service
      dockerfile: Dockerfile
    command: sh -c 'sh scripts/startapp.sh'
    container_name: divinaition_llm_service
    ports:
      - "8012:8000"
    volumes:
      - ./llm_service:/app
    env_file:
      - ./llm_service/.env
    healthcheck:
      test: [ "CMD", "curl", "localhost:8012/docs" ]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 1600M
    restart: on-failure

volumes:
  divinaition_auth_pg:
  divinaition_user_pg:
